'use strict';

const { test, ok, notOk } = require('tap');
const uv = require('uv');

test('Check uv validation', ({ end }) => {

	ok(uv(Buffer.alloc(0)));

	ok(uv(Buffer.from([0xFF, 0x00]), 1));
	ok(uv(Buffer.from([0x00, 0xFF]), 0, 1));
	ok(uv(Buffer.from([0xFF, 0x00, 0xFF]), 1, 2));

	ok(uv(Buffer.from([0x00])));
	ok(uv(Buffer.from([0xC2, 0x80])));
	ok(uv(Buffer.from([0xE0, 0xA0, 0x80])));
	ok(uv(Buffer.from([0xE1, 0x80, 0x80])));
	ok(uv(Buffer.from([0xED, 0x80, 0x80])));
	ok(uv(Buffer.from([0xF0, 0x90, 0x80, 0x80])));
	ok(uv(Buffer.from([0xF1, 0x80, 0x80, 0x80])));
	ok(uv(Buffer.from([0xF4, 0x80, 0x80, 0x80])));

	notOk(uv(Buffer.from([0xFF])));
	notOk(uv(Buffer.from([0xC2, 0xFF])));
	notOk(uv(Buffer.from([0xE0, 0xA0, 0xFF])));
	notOk(uv(Buffer.from([0xE1, 0x80, 0xFF])));
	notOk(uv(Buffer.from([0xED, 0x80, 0xFF])));
	notOk(uv(Buffer.from([0xF0, 0x90, 0x80, 0xFF])));
	notOk(uv(Buffer.from([0xF1, 0x80, 0x80, 0xFF])));
	notOk(uv(Buffer.from([0xF4, 0x80, 0x80, 0xFF])));

	ok(uv(Buffer.from([0x00, 0x00])));
	ok(uv(Buffer.from([0xC2, 0x80, 0xC2, 0x80])));
	ok(uv(Buffer.from([0xE0, 0xA0, 0x80, 0xE0, 0xA0, 0x80])));
	ok(uv(Buffer.from([0xE1, 0x80, 0x80, 0xE1, 0x80, 0x80])));
	ok(uv(Buffer.from([0xED, 0x80, 0x80, 0xED, 0x80, 0x80])));
	ok(uv(Buffer.from([0xF0, 0x90, 0x80, 0x80, 0xF0, 0x90, 0x80, 0x80])));
	ok(uv(Buffer.from([0xF1, 0x80, 0x80, 0x80, 0xF1, 0x80, 0x80, 0x80])));
	ok(uv(Buffer.from([0xF4, 0x80, 0x80, 0x80, 0xF4, 0x80, 0x80, 0x80])));

	notOk(uv(Buffer.from([0x00, 0xFF])));
	notOk(uv(Buffer.from([0xC2, 0x80, 0xC2, 0xFF])));
	notOk(uv(Buffer.from([0xE0, 0xA0, 0x80, 0xE0, 0xA0, 0xFF])));
	notOk(uv(Buffer.from([0xE1, 0x80, 0x80, 0xE1, 0x80, 0xFF])));
	notOk(uv(Buffer.from([0xED, 0x80, 0x80, 0xED, 0x80, 0xFF])));
	notOk(uv(Buffer.from([0xF0, 0x90, 0x80, 0x80, 0xF0, 0x90, 0x80, 0xFF])));
	notOk(uv(Buffer.from([0xF1, 0x80, 0x80, 0x80, 0xF1, 0x80, 0x80, 0xFF])));
	notOk(uv(Buffer.from([0xF4, 0x80, 0x80, 0x80, 0xF4, 0x80, 0x80, 0xFF])));

	ok(uv(Buffer.from([0x00, 0x00, 0x00])));
	ok(uv(Buffer.from([0xC2, 0x80, 0xC2, 0x80, 0xC2, 0x80])));
	ok(uv(Buffer.from([0xE0, 0xA0, 0x80, 0xE0, 0xA0, 0x80, 0xE0, 0xA0, 0x80])));
	ok(uv(Buffer.from([0xE1, 0x80, 0x80, 0xE1, 0x80, 0x80, 0xE1, 0x80, 0x80])));
	ok(uv(Buffer.from([0xED, 0x80, 0x80, 0xED, 0x80, 0x80, 0xED, 0x80, 0x80])));
	ok(uv(Buffer.from([0xF0, 0x90, 0x80, 0x80, 0xF0, 0x90, 0x80, 0x80, 0xF0, 0x90, 0x80, 0x80])));
	ok(uv(Buffer.from([0xF1, 0x80, 0x80, 0x80, 0xF1, 0x80, 0x80, 0x80, 0xF1, 0x80, 0x80, 0x80])));
	ok(uv(Buffer.from([0xF4, 0x80, 0x80, 0x80, 0xF4, 0x80, 0x80, 0x80, 0xF4, 0x80, 0x80, 0x80])));

	notOk(uv(Buffer.from([0x00, 0x00, 0xFF])));
	notOk(uv(Buffer.from([0xC2, 0x80, 0xC2, 0x80, 0xC2, 0xFF])));
	notOk(uv(Buffer.from([0xE0, 0xA0, 0x80, 0xE0, 0xA0, 0x80, 0xE0, 0xA0, 0xFF])));
	notOk(uv(Buffer.from([0xE1, 0x80, 0x80, 0xE1, 0x80, 0x80, 0xE1, 0x80, 0xFF])));
	notOk(uv(Buffer.from([0xED, 0x80, 0x80, 0xED, 0x80, 0x80, 0xED, 0x80, 0xFF])));
	notOk(uv(Buffer.from([0xF0, 0x90, 0x80, 0x80, 0xF0, 0x90, 0x80, 0x80, 0xF0, 0x90, 0x80, 0xFF])));
	notOk(uv(Buffer.from([0xF1, 0x80, 0x80, 0x80, 0xF1, 0x80, 0x80, 0x80, 0xF1, 0x80, 0x80, 0xFF])));
	notOk(uv(Buffer.from([0xF4, 0x80, 0x80, 0x80, 0xF4, 0x80, 0x80, 0x80, 0xF4, 0x80, 0x80, 0xFF])));

	ok(uv(Buffer.from([0x00, 0x00, 0x00, 0x00])));
	ok(uv(Buffer.from([0xC2, 0x80, 0xC2, 0x80, 0xC2, 0x80, 0xC2, 0x80])));
	ok(uv(Buffer.from([0xE0, 0xA0, 0x80, 0xE0, 0xA0, 0x80, 0xE0, 0xA0, 0x80, 0xE0, 0xA0, 0x80])));
	ok(uv(Buffer.from([0xE1, 0x80, 0x80, 0xE1, 0x80, 0x80, 0xE1, 0x80, 0x80, 0xE1, 0x80, 0x80])));
	ok(uv(Buffer.from([0xED, 0x80, 0x80, 0xED, 0x80, 0x80, 0xED, 0x80, 0x80, 0xED, 0x80, 0x80])));
	ok(uv(Buffer.from([0xF0, 0x90, 0x80, 0x80, 0xF0, 0x90, 0x80, 0x80, 0xF0, 0x90, 0x80, 0x80, 0xF0, 0x90, 0x80, 0x80])));
	ok(uv(Buffer.from([0xF1, 0x80, 0x80, 0x80, 0xF1, 0x80, 0x80, 0x80, 0xF1, 0x80, 0x80, 0x80, 0xF1, 0x80, 0x80, 0x80])));
	ok(uv(Buffer.from([0xF4, 0x80, 0x80, 0x80, 0xF4, 0x80, 0x80, 0x80, 0xF4, 0x80, 0x80, 0x80, 0xF4, 0x80, 0x80, 0x80])));

	notOk(uv(Buffer.from([0x00, 0x00, 0x00, 0xFF])));
	notOk(uv(Buffer.from([0xC2, 0x80, 0xC2, 0x80, 0xC2, 0x80, 0xC2, 0xFF])));
	notOk(uv(Buffer.from([0xE0, 0xA0, 0x80, 0xE0, 0xA0, 0x80, 0xE0, 0xA0, 0x80, 0xE0, 0xA0, 0xFF])));
	notOk(uv(Buffer.from([0xE1, 0x80, 0x80, 0xE1, 0x80, 0x80, 0xE1, 0x80, 0x80, 0xE1, 0x80, 0xFF])));
	notOk(uv(Buffer.from([0xED, 0x80, 0x80, 0xED, 0x80, 0x80, 0xED, 0x80, 0x80, 0xED, 0x80, 0xFF])));
	notOk(uv(Buffer.from([0xF0, 0x90, 0x80, 0x80, 0xF0, 0x90, 0x80, 0x80, 0xF0, 0x90, 0x80, 0x80, 0xF0, 0x90, 0x80, 0xFF])));
	notOk(uv(Buffer.from([0xF1, 0x80, 0x80, 0x80, 0xF1, 0x80, 0x80, 0x80, 0xF1, 0x80, 0x80, 0x80, 0xF1, 0x80, 0x80, 0xFF])));
	notOk(uv(Buffer.from([0xF4, 0x80, 0x80, 0x80, 0xF4, 0x80, 0x80, 0x80, 0xF4, 0x80, 0x80, 0x80, 0xF4, 0x80, 0x80, 0xFF])));

	ok(uv(Buffer.from([0xC2, 0x80, 0x00])));

	notOk(uv(Buffer.from([0xFF, 0x00, 0x00, 0x00])));
	notOk(uv(Buffer.from([0xC2, 0xFF, 0x00, 0x00])));
	notOk(uv(Buffer.from([0xE0, 0xFF, 0x00, 0x00])));
	notOk(uv(Buffer.from([0xE1, 0xFF, 0x00, 0x00])));
	notOk(uv(Buffer.from([0xED, 0xFF, 0x00, 0x00])));
	notOk(uv(Buffer.from([0xF0, 0xFF, 0x00, 0x00])));
	notOk(uv(Buffer.from([0xF1, 0xFF, 0x00, 0x00])));
	notOk(uv(Buffer.from([0xF4, 0xFF, 0x00, 0x00])));

	ok(uv(Buffer.from([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00])));

	end();
});